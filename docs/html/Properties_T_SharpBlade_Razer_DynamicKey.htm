<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>DynamicKey Properties</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="DynamicKey class, properties" /><meta name="Microsoft.Help.Id" content="Properties.T:SharpBlade.Razer.DynamicKey" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="SharpBlade.Razer" /><meta name="file" content="Properties_T_SharpBlade_Razer_DynamicKey" /><meta name="guid" content="Properties_T_SharpBlade_Razer_DynamicKey" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">DynamicKey Properties</td><td class="OH_tdRunningTitleColumn">SharpBlade documentation</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><p>The <a href="T_SharpBlade_Razer_DynamicKey.htm" target="">DynamicKey</a> type exposes the following members.</p><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Properties</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><table id="memberList" class="members"><tr><th class="ps_iconColumn">
							 
						</th><th class="ps_nameColumn">Name</th><th class="ps_descriptionColumn">Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_RenderTarget_CurrentForm.htm" target="">CurrentForm</a></td><td><div class="summary">
            Gets or sets the currently active form, null if no form is set.
            </div> (Inherited from <a href="T_SharpBlade_Razer_RenderTarget.htm" target="">RenderTarget</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_DynamicKey_CurrentImage.htm" target="">CurrentImage</a></td><td><div class="summary">
            Gets the current image being displayed on the render target.
            </div> (Overrides <a href="P_SharpBlade_Razer_RenderTarget_CurrentImage.htm" target="">RenderTarget<span id="ID0EBBANBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBANBCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>CurrentImage</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_RenderTarget_CurrentNativeWindow.htm" target="">CurrentNativeWindow</a></td><td><div class="summary">
            Gets or sets the currently rendering Native window, <span class="code">IntPtr.Zero</span> if no window set
            </div> (Inherited from <a href="T_SharpBlade_Razer_RenderTarget.htm" target="">RenderTarget</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_RenderTarget_CurrentWindow.htm" target="">CurrentWindow</a></td><td><div class="summary">
            Gets or sets the currently rendering WPF window, null if no window is set.
            </div> (Inherited from <a href="T_SharpBlade_Razer_RenderTarget.htm" target="">RenderTarget</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_RenderTarget_DisplayHeight.htm" target="">DisplayHeight</a></td><td><div class="summary">
            Gets the height of this <a href="T_SharpBlade_Razer_IRenderTarget.htm" target="">IRenderTarget</a> in pixels.
            </div> (Inherited from <a href="T_SharpBlade_Razer_RenderTarget.htm" target="">RenderTarget</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_RenderTarget_DisplayWidth.htm" target="">DisplayWidth</a></td><td><div class="summary">
            Gets the width of this <a href="T_SharpBlade_Razer_IRenderTarget.htm" target="">IRenderTarget</a> in pixels.
            </div> (Inherited from <a href="T_SharpBlade_Razer_RenderTarget.htm" target="">RenderTarget</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_SharpBlade_Razer_RenderTarget_Disposed.htm" target="">Disposed</a></td><td><div class="summary">
            Gets or sets a value indicating whether this object has been disposed.
            </div> (Inherited from <a href="T_SharpBlade_Razer_RenderTarget.htm" target="">RenderTarget</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_DynamicKey_DownImage.htm" target="">DownImage</a></td><td><div class="summary">
            Gets the image displayed on this key when in DOWN state.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_DynamicKey_KeyType.htm" target="">KeyType</a></td><td><div class="summary">
            Gets the <a href="T_SharpBlade_Native_RazerAPI_DynamicKeyType.htm" target="">RazerAPI<span id="ID0EBBAAGBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBAAGBCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>DynamicKeyType</a> of this key.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_DynamicKey_PreviousState.htm" target="">PreviousState</a></td><td><div class="summary">
            Gets the previous state of this key.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="./../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_SharpBlade_Razer_RenderTarget_Renderer.htm" target="">Renderer</a></td><td><div class="summary">
            Gets or sets the <a href="T_SharpBlade_Integration_IRenderer.htm" target="">IRenderer</a> instance used to
            manage timed rendering of objects.
            </div> (Inherited from <a href="T_SharpBlade_Razer_RenderTarget.htm" target="">RenderTarget</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_DynamicKey_SingleImage.htm" target="">SingleImage</a></td><td><div class="summary">
            Gets a value indicating whether this key is
            using a single image for both UP and DOWN states.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_DynamicKey_State.htm" target="">State</a></td><td><div class="summary">
            Gets the current state of this key.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_RenderTarget_TargetDisplay.htm" target="">TargetDisplay</a></td><td><div class="summary">
            Gets the <a href="T_SharpBlade_Native_RazerAPI_TargetDisplay.htm" target="">RazerAPI<span id="ID0EBBDABBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBDABBCAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>TargetDisplay</a> that content will be
            rendered to.
            </div> (Inherited from <a href="T_SharpBlade_Razer_RenderTarget.htm" target="">RenderTarget</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="./../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_SharpBlade_Razer_DynamicKey_UpImage.htm" target="">UpImage</a></td><td><div class="summary">
            Gets the image displayed on this key when in the UP state.
            </div></td></tr></table><a href="#mainBody" target="">Top</a><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="T_SharpBlade_Razer_DynamicKey.htm" target="">DynamicKey Class</a></div><div class="seeAlsoStyle"><a href="N_SharpBlade_Razer.htm" target="">SharpBlade.Razer Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="https://github.com/SharpBlade/SharpBlade" target="_blank">Project Page</a></p><p><a href="https://github.com/SharpBlade/SharpBlade/blob/master/LICENSE" target="_blank">Copyright (c) 2013-2014 by Adam Hellberg and Brandon Scott. (https://github.com/SharpBlade/SharpBlade/blob/master/LICENSE)</a></p><div class="OH_feedbacklink"><a href="mailto:info@sharpblade.net?subject=SharpBlade+documentation+DynamicKey+Properties+100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to info@sharpblade.net.</div></div></body></html>