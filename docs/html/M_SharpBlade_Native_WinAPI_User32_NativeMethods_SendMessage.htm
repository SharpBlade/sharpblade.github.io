<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>User32.NativeMethods.SendMessage Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SendMessage method" /><meta name="System.Keywords" content="User32.NativeMethods.SendMessage method" /><meta name="Microsoft.Help.F1" content="SharpBlade.Native.WinAPI.User32.NativeMethods.SendMessage" /><meta name="Microsoft.Help.Id" content="M:SharpBlade.Native.WinAPI.User32.NativeMethods.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)" /><meta name="Description" content="Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the specified window and does not return until the window procedure has processed the message." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="SharpBlade.Native.WinAPI" /><meta name="file" content="M_SharpBlade_Native_WinAPI_User32_NativeMethods_SendMessage" /><meta name="guid" content="M_SharpBlade_Native_WinAPI_User32_NativeMethods_SendMessage" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">User32<span id="ID0EDBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>NativeMethods<span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>SendMessage Method </td><td class="OH_tdRunningTitleColumn">SharpBlade documentation</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary">
            Sends the specified message to a window or windows.
            The SendMessage function calls the window procedure
            for the specified window and does not return until
            the window procedure has processed the message.
            </div><p></p><strong>Namespace:</strong> <a href="N_SharpBlade_Native_WinAPI.htm" target="">SharpBlade.Native.WinAPI</a><br /><strong>Assembly:</strong> <span sdata="assembly">SharpBlade</span> (in SharpBlade.dll) Version: 5.1.0 Stable<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EDGDAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDGDAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EDGDAAAAA_tabimgleft"></div><div id="ID0EDGDAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EDGDAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDGDAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0EDGDAAAAA_tab4" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','F#','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDGDAAAAA_tabimgright"></div></div><div id="ID0EDGDAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDGDAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDGDAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDGDAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDGDAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDGDAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDGDAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EDGDAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre>[<span class="identifier">DllImportAttribute</span>("user32.dll", CharSet = CharSet.Auto)]
<span class="keyword">internal</span> <span class="keyword">static</span> <span class="identifier">IntPtr</span> <span class="identifier">SendMessage</span>(
	<span class="identifier">IntPtr</span> <span class="parameter">hWnd</span>,
	<span class="identifier">uint</span> <span class="parameter">Msg</span>,
	<span class="identifier">IntPtr</span> <span class="parameter">wParam</span>,
	<span class="identifier">IntPtr</span> <span class="parameter">lParam</span>
)</pre></div><div id="ID0EDGDAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[DllImportAttribute("user32.dll", CharSet = CharSet.Auto)]
internal static IntPtr SendMessage(
	IntPtr hWnd,
	uint Msg,
	IntPtr wParam,
	IntPtr lParam
)</pre></div><div id="ID0EDGDAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;<span class="identifier">DllImportAttribute</span>("user32.dll", CharSet := CharSet.Auto&gt;]
<span class="keyword">Friend</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">SendMessage</span> ( 
	<span class="parameter">hWnd</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>,
	<span class="parameter">Msg</span> <span class="keyword">As</span> <span class="identifier">UInteger</span>,
	<span class="parameter">wParam</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>,
	<span class="parameter">lParam</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>
) <span class="keyword">As</span> <span class="identifier">IntPtr</span></pre></div><div id="ID0EDGDAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;DllImportAttribute("user32.dll", CharSet := CharSet.Auto&gt;]
Friend Shared Function SendMessage ( 
	hWnd As IntPtr,
	Msg As UInteger,
	wParam As IntPtr,
	lParam As IntPtr
) As IntPtr</pre></div><div id="ID0EDGDAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">internal</span>:
[<span class="identifier">DllImportAttribute</span>(L"user32.dll", CharSet = CharSet::Auto)]
<span class="keyword">static</span> <span class="identifier">IntPtr</span> <span class="identifier">SendMessage</span>(
	<span class="identifier">IntPtr</span> <span class="parameter">hWnd</span>, 
	<span class="identifier">unsigned int</span> <span class="parameter">Msg</span>, 
	<span class="identifier">IntPtr</span> <span class="parameter">wParam</span>, 
	<span class="identifier">IntPtr</span> <span class="parameter">lParam</span>
)</pre></div><div id="ID0EDGDAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>internal:
[DllImportAttribute(L"user32.dll", CharSet = CharSet::Auto)]
static IntPtr SendMessage(
	IntPtr hWnd, 
	unsigned int Msg, 
	IntPtr wParam, 
	IntPtr lParam
)</pre></div><div id="ID0EDGDAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[&lt;<span class="identifier">DllImportAttribute</span>("user32.dll", CharSet = CharSet.Auto)&gt;]
<span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">SendMessage</span> : 
        <span class="parameter">hWnd</span> : <span class="identifier">IntPtr</span> * 
        <span class="parameter">Msg</span> : <span class="identifier">uint32</span> * 
        <span class="parameter">wParam</span> : <span class="identifier">IntPtr</span> * 
        <span class="parameter">lParam</span> : <span class="identifier">IntPtr</span> <span class="keyword">-&gt;</span> <span class="identifier">IntPtr</span></pre></div><div id="ID0EDGDAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[&lt;DllImportAttribute("user32.dll", CharSet = CharSet.Auto)&gt;]
internal static member SendMessage : 
        hWnd : IntPtr * 
        Msg : uint32 * 
        wParam : IntPtr * 
        lParam : IntPtr -&gt; IntPtr</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDGDAAAAA');</script></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="hWnd"><dt><span class="parameter">hWnd</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="ID0EBCADFDAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCADFDAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IntPtr</a><br /><span>
            A handle to the window whose window procedure will receive the message.
            If this parameter is HWND_BROADCAST ((HWND)0xffff),
            the message is sent to all top-level windows in the system,
            including disabled or invisible unowned windows, overlapped windows,
            and pop-up windows; but the message is not sent to child windows.
            Message sending is subject to UIPI.
            The thread of a process can send messages only to message queues of
            threads in processes of lesser or equal integrity level.
            </span></dd></dl><dl paramName="Msg"><dt><span class="parameter">Msg</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/ctys3981" target="_blank">System<span id="ID0EBCACFDAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCACFDAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>UInt32</a><br /><span>The message to be sent.</span></dd></dl><dl paramName="wParam"><dt><span class="parameter">wParam</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="ID0EBCABFDAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCABFDAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IntPtr</a><br /><span>Additional message-specific information (<span class="code">unsigned int</span>).</span></dd></dl><dl paramName="lParam"><dt><span class="parameter">lParam</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="ID0EBCAAFDAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCAAFDAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IntPtr</a><br /><span>Additional message-specific information (<span class="code">long</span>).</span></dd></dl></div><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">IntPtr</a><br />The return value specifies the result of the message processing; it depends on the message sent.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div>
            When a message is blocked by UIPI the last error, retrieved with GetLastError, is set to 5 (access denied).
            Applications that need to communicate using HWND_BROADCAST should use the RegisterWindowMessage function to
            obtain a unique message for inter-application communication.
            The system only does marshalling for system messages (those in the range 0 to (WM_USER-1)).
            To send other messages (those &gt;= WM_USER) to another process, you must do custom marshalling.
            If the specified window was created by the calling thread, the window procedure is called immediately
            as a subroutine. If the specified window was created by a different thread, the system switches to that
            thread and calls the appropriate window procedure. Messages sent between threads are processed only when
            the receiving thread executes message retrieval code. The sending thread is blocked until the receiving
            thread processes the message. However, the sending thread will process incoming nonqueued messages while
            waiting for its message to be processed. To prevent this, use SendMessageTimeout with SMTO_BLOCK set.
            For more information on nonqueued messages, see Nonqueued Messages.
            An accessibility application can use SendMessage to send WM_APPCOMMAND messages to the shell to launch
            applications. This functionality is not guaranteed to work for other types of applications.
            <a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="T_SharpBlade_Native_WinAPI_User32_NativeMethods.htm" target="">User32<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>NativeMethods Class</a></div><div class="seeAlsoStyle"><a href="N_SharpBlade_Native_WinAPI.htm" target="">SharpBlade.Native.WinAPI Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="https://github.com/SharpBlade/SharpBlade" target="_blank">Project Page</a></p><p><a href="https://github.com/SharpBlade/SharpBlade/blob/master/LICENSE" target="_blank">Copyright (c) 2013-2014 by Adam Hellberg and Brandon Scott. (https://github.com/SharpBlade/SharpBlade/blob/master/LICENSE)</a></p><div class="OH_feedbacklink"><a href="mailto:info@sharpblade.net?subject=SharpBlade+documentation+User32.NativeMethods.SendMessage+Method++100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to info@sharpblade.net.</div></div></body></html>