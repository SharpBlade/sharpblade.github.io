<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>RazerAPI.NativeMethods.RzSBStart Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="RzSBStart method" /><meta name="System.Keywords" content="RazerAPI.NativeMethods.RzSBStart method" /><meta name="Microsoft.Help.F1" content="SharpBlade.Native.RazerAPI.NativeMethods.RzSBStart" /><meta name="Microsoft.Help.Id" content="M:SharpBlade.Native.RazerAPI.NativeMethods.RzSBStart" /><meta name="Description" content="Grants access to the Switchblade device, establishing application connections." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="SharpBlade.Native" /><meta name="file" content="M_SharpBlade_Native_RazerAPI_NativeMethods_RzSBStart" /><meta name="guid" content="M_SharpBlade_Native_RazerAPI_NativeMethods_RzSBStart" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">RazerAPI<span id="ID0EDBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>NativeMethods<span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>RzSBStart Method </td><td class="OH_tdRunningTitleColumn">SharpBlade documentation</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary">
            Grants access to the Switchblade device, establishing application connections.
            </div><p></p><strong>Namespace:</strong> <a href="N_SharpBlade_Native.htm" target="">SharpBlade.Native</a><br /><strong>Assembly:</strong> <span sdata="assembly">SharpBlade</span> (in SharpBlade.dll) Version: 6.0.0 Stable<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EDGDAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDGDAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EDGDAAAAA_tabimgleft"></div><div id="ID0EDGDAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EDGDAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDGDAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0EDGDAAAAA_tab4" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','F#','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDGDAAAAA_tabimgright"></div></div><div id="ID0EDGDAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDGDAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDGDAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDGDAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDGDAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDGDAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDGDAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EDGDAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre>[<span class="identifier">DllImportAttribute</span>("RzSwitchbladeSDK2.dll", CallingConvention = CallingConvention.Cdecl, 
	SetLastError = true)]
<span class="keyword">internal</span> <span class="keyword">static</span> <span class="identifier">HRESULT</span> <span class="identifier">RzSBStart</span>()</pre></div><div id="ID0EDGDAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[DllImportAttribute("RzSwitchbladeSDK2.dll", CallingConvention = CallingConvention.Cdecl, 
	SetLastError = true)]
internal static HRESULT RzSBStart()</pre></div><div id="ID0EDGDAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;<span class="identifier">DllImportAttribute</span>("RzSwitchbladeSDK2.dll", CallingConvention := CallingConvention.Cdecl, 
	SetLastError := true&gt;]
<span class="keyword">Friend</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">RzSBStart</span> <span class="keyword">As</span> <span class="identifier">HRESULT</span></pre></div><div id="ID0EDGDAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;DllImportAttribute("RzSwitchbladeSDK2.dll", CallingConvention := CallingConvention.Cdecl, 
	SetLastError := true&gt;]
Friend Shared Function RzSBStart As HRESULT</pre></div><div id="ID0EDGDAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">internal</span>:
[<span class="identifier">DllImportAttribute</span>(L"RzSwitchbladeSDK2.dll", CallingConvention = CallingConvention::Cdecl, 
	SetLastError = true)]
<span class="keyword">static</span> <span class="identifier">HRESULT</span> <span class="identifier">RzSBStart</span>()</pre></div><div id="ID0EDGDAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>internal:
[DllImportAttribute(L"RzSwitchbladeSDK2.dll", CallingConvention = CallingConvention::Cdecl, 
	SetLastError = true)]
static HRESULT RzSBStart()</pre></div><div id="ID0EDGDAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[&lt;<span class="identifier">DllImportAttribute</span>("RzSwitchbladeSDK2.dll", CallingConvention = CallingConvention.Cdecl, 
	SetLastError = true)&gt;]
<span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">RzSBStart</span> : <span class="keyword">unit</span> <span class="keyword">-&gt;</span> <span class="identifier">HRESULT</span></pre></div><div id="ID0EDGDAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[&lt;DllImportAttribute("RzSwitchbladeSDK2.dll", CallingConvention = CallingConvention.Cdecl, 
	SetLastError = true)&gt;]
internal static member RzSBStart : unit -&gt; HRESULT</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDGDAAAAA');</script></div><h4 class="subHeading">Return Value</h4>Type: <a href="T_SharpBlade_Native_HRESULT.htm" target="">HRESULT</a><br /><a href="T_SharpBlade_Native_HRESULT.htm" target="">HRESULT</a> object indicating success or failure.<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><span class="selflink">RzSBStart<span id="ID0EAKCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAKCAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></span> sets up the connections that allow an application to access the Switchblade hardware device.
            This routine returns <a href="F_SharpBlade_Native_HRESULT_RZSB_OK.htm" target="">RZSB_OK</a> on success, granting the calling application control of the device.
            Subsequent calls to this routine prior to a matching <a href="M_SharpBlade_Native_RazerAPI_NativeMethods_RzSBStop.htm" target="">RzSBStop<span id="ID0EAGCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAGCAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a> call are ignored.
            <p><span class="selflink">RzSBStart<span id="ID0EAFECAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAFECAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></span> must be called before other Switchblade SDK routines will succeed.
            <span class="selflink">RzSBStart<span id="ID0EADECAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EADECAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></span> must always be accompanied by an <a href="M_SharpBlade_Native_RazerAPI_NativeMethods_RzSBStop.htm" target="">RzSBStop<span id="ID0EABECAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABECAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></a>.</p><p>COM initialization should be called prior to calling <span class="selflink">RzSBStart<span id="ID0EAFDCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EAFDCAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></span>.
            If the application developer intends to use Single-Threaded Apartment model (STA) and call the SDK
            functions within the same thread where the COM was initialized, then <span class="code">CoInitialize()</span> should be called
            before <span class="selflink">RzSBStart<span id="ID0EABDCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABDCAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></span>.</p><p>Note that some MFC controls automatically initializes to STA.</p><p>If the application developer intends to call the SDK functions on different threads,
            then the <span class="code">CoInitializeEx()</span> should be called before <span class="selflink">RzSBStart<span id="ID0EABBCAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EABBCAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></span>.</p><p>Note: When the <span class="selflink">RzSBStart<span id="ID0EADACAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EADACAAAAA?vb=|cpp=()|cs=()|fs=()|nu=()");
				</script></span> is called without the COM being initialized
            (e.g. thru calling <span class="code">CoInitializeEx</span>)
            the SDK initializes the COM to Multi-Threaded Apartment (MTA) model.
            As such, callers must invoke SDK functions from an MTA thread.
            Future SDK versions will move these calls into an isolated STA, giving application developers additional
            freedom to use COM in any fashion.
            However, application developers may already implement their own processing to isolate the SDK
            initialization and calls to avoid the issues for COM in different threading models.</p><a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="T_SharpBlade_Native_RazerAPI_NativeMethods.htm" target="">RazerAPI<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>NativeMethods Class</a></div><div class="seeAlsoStyle"><a href="N_SharpBlade_Native.htm" target="">SharpBlade.Native Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="https://github.com/SharpBlade/SharpBlade" target="_blank">Project Page</a></p><p><a href="https://github.com/SharpBlade/SharpBlade/blob/master/LICENSE" target="_blank">Copyright (c) 2013-2014 by Adam Hellberg and Brandon Scott. (https://github.com/SharpBlade/SharpBlade/blob/master/LICENSE)</a></p><div class="OH_feedbacklink"><a href="mailto:info@sharpblade.net?subject=SharpBlade+documentation+RazerAPI.NativeMethods.RzSBStart+Method++100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to info@sharpblade.net.</div></div></body></html>