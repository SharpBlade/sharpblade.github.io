<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp"><head><link rel="SHORTCUT ICON" href="./../icons/favicon.ico" /><style type="text/css">.OH_CodeSnippetContainerTabLeftActive, .OH_CodeSnippetContainerTabLeft,.OH_CodeSnippetContainerTabLeftDisabled { }.OH_CodeSnippetContainerTabRightActive, .OH_CodeSnippetContainerTabRight,.OH_CodeSnippetContainerTabRightDisabled { }.OH_footer { }</style><link rel="stylesheet" type="text/css" href="./../styles/branding.css" /><link rel="stylesheet" type="text/css" href="./../styles/branding-en-US.css" /><style type="text/css">
			body
			{
			border-left:5px solid #e6e6e6;
			overflow-x:scroll;
			overflow-y:scroll;
			}
		</style><script src="./../scripts/branding.js" type="text/javascript"><!----></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>User32.NativeMethods.PostMessage Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="PostMessage method" /><meta name="System.Keywords" content="User32.NativeMethods.PostMessage method" /><meta name="Microsoft.Help.F1" content="Sharparam.SharpBlade.Native.WinAPI.User32.NativeMethods.PostMessage" /><meta name="Microsoft.Help.Id" content="M:Sharparam.SharpBlade.Native.WinAPI.User32.NativeMethods.PostMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)" /><meta name="Description" content="Places (posts) a message in the message queue associated with the thread that created the specified window and returns without waiting for the thread to process the message." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="'true'" /><meta name="container" content="Sharparam.SharpBlade.Native.WinAPI" /><meta name="file" content="1dc1145e-27a5-1dfc-a406-4804bcfc6efe" /><meta name="guid" content="1dc1145e-27a5-1dfc-a406-4804bcfc6efe" /><meta name="SelfBranded" content="true" /></head><body onload="onLoad()" class="primary-mtps-offline-document"><div class="OH_outerDiv"><div class="OH_outerContent"><table class="TitleTable"><tr><td class="OH_tdTitleColumn">User32<span id="ID0EDBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EDBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>NativeMethods<span id="ID0EBBABAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBBABAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>PostMessage Method </td><td class="OH_tdRunningTitleColumn">SharpBlade documentation</td></tr></table><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="summary">
            Places (posts) a message in the message queue associated with the thread that created
            the specified window and returns without waiting for the thread to process the message.
            </div><p></p><strong>Namespace:</strong> <a href="a398e205-aca3-a4f0-e2a5-36c8e0890e8e.htm" target="">Sharparam.SharpBlade.Native.WinAPI</a><br /><strong>Assembly:</strong> <span sdata="assembly">Sharparam.SharpBlade</span> (in Sharparam.SharpBlade.dll) Version: 4.0.1 Stable<div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Syntax</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div id="snippetGroup_Syntax" class="code"><div id="ID0EDGDAAAAA" class="OH_CodeSnippetContainer"><div class="OH_CodeSnippetContainerTabs" id="ID0EDGDAAAAA_tabs"><div class="OH_CodeSnippetContainerTabLeftActive" id="ID0EDGDAAAAA_tabimgleft"></div><div id="ID0EDGDAAAAA_tab1" class="OH_CodeSnippetContainerTabActive" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','C#','1','4');return false;">C#</a></div><div id="ID0EDGDAAAAA_tab2" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','Visual Basic','2','4');return false;">VB</a></div><div id="ID0EDGDAAAAA_tab3" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','Visual C++','3','4');return false;">C++</a></div><div id="ID0EDGDAAAAA_tab4" class="OH_CodeSnippetContainerTab" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EDGDAAAAA','F#','4','4');return false;">F#</a></div><div class="OH_CodeSnippetContainerTabRight" id="ID0EDGDAAAAA_tabimgright"></div></div><div id="ID0EDGDAAAAA_codecollection" class="OH_CodeSnippetContainerCodeCollection"><div class="OH_CodeSnippetToolBar"><div class="OH_CodeSnippetToolBarText"><a id="ID0EDGDAAAAA_ViewColorized" href="#" onclick="javascript:ExchangeTitleContent('ID0EDGDAAAAA','4')" title="View Colorized" style="display: none">View Colorized</a><a id="ID0EDGDAAAAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EDGDAAAAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EDGDAAAAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EDGDAAAAA','4')" title="Print">Print</a></div></div><div id="ID0EDGDAAAAA_code_Div1" class="OH_CodeSnippetContainerCode" style="display: block"><pre>[<span class="identifier">DllImportAttribute</span>("user32.dll", SetLastError = true)]
<span class="keyword">internal</span> <span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">PostMessage</span>(
	<span class="identifier">IntPtr</span> <span class="parameter">hWnd</span>,
	<span class="identifier">uint</span> <span class="parameter">Msg</span>,
	<span class="identifier">IntPtr</span> <span class="parameter">wParam</span>,
	<span class="identifier">IntPtr</span> <span class="parameter">lParam</span>
)</pre></div><div id="ID0EDGDAAAAA_code_Plain_Div1" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[DllImportAttribute("user32.dll", SetLastError = true)]
internal static bool PostMessage(
	IntPtr hWnd,
	uint Msg,
	IntPtr wParam,
	IntPtr lParam
)</pre></div><div id="ID0EDGDAAAAA_code_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;<span class="identifier">DllImportAttribute</span>("user32.dll", SetLastError := true&gt;]
<span class="keyword">Friend</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">PostMessage</span> ( 
	<span class="parameter">hWnd</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>,
	<span class="parameter">Msg</span> <span class="keyword">As</span> <span class="identifier">UInteger</span>,
	<span class="parameter">wParam</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>,
	<span class="parameter">lParam</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div><div id="ID0EDGDAAAAA_code_Plain_Div2" class="OH_CodeSnippetContainerCode" style="display: none"><pre>&lt;DllImportAttribute("user32.dll", SetLastError := true&gt;]
Friend Shared Function PostMessage ( 
	hWnd As IntPtr,
	Msg As UInteger,
	wParam As IntPtr,
	lParam As IntPtr
) As Boolean</pre></div><div id="ID0EDGDAAAAA_code_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre><span class="keyword">internal</span>:
[<span class="identifier">DllImportAttribute</span>(L"user32.dll", SetLastError = true)]
<span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">PostMessage</span>(
	<span class="identifier">IntPtr</span> <span class="parameter">hWnd</span>, 
	<span class="identifier">unsigned int</span> <span class="parameter">Msg</span>, 
	<span class="identifier">IntPtr</span> <span class="parameter">wParam</span>, 
	<span class="identifier">IntPtr</span> <span class="parameter">lParam</span>
)</pre></div><div id="ID0EDGDAAAAA_code_Plain_Div3" class="OH_CodeSnippetContainerCode" style="display: none"><pre>internal:
[DllImportAttribute(L"user32.dll", SetLastError = true)]
static bool PostMessage(
	IntPtr hWnd, 
	unsigned int Msg, 
	IntPtr wParam, 
	IntPtr lParam
)</pre></div><div id="ID0EDGDAAAAA_code_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[&lt;<span class="identifier">DllImportAttribute</span>("user32.dll", SetLastError = true)&gt;]
<span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">PostMessage</span> : 
        <span class="parameter">hWnd</span> : <span class="identifier">IntPtr</span> * 
        <span class="parameter">Msg</span> : <span class="identifier">uint32</span> * 
        <span class="parameter">wParam</span> : <span class="identifier">IntPtr</span> * 
        <span class="parameter">lParam</span> : <span class="identifier">IntPtr</span> <span class="keyword">-&gt;</span> <span class="identifier">bool</span></pre></div><div id="ID0EDGDAAAAA_code_Plain_Div4" class="OH_CodeSnippetContainerCode" style="display: none"><pre>[&lt;DllImportAttribute("user32.dll", SetLastError = true)&gt;]
internal static member PostMessage : 
        hWnd : IntPtr * 
        Msg : uint32 * 
        wParam : IntPtr * 
        lParam : IntPtr -&gt; bool</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EDGDAAAAA');</script></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="hWnd"><dt><span class="parameter">hWnd</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="ID0EBCADFDAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCADFDAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IntPtr</a><br /><span>A handle to the window whose window procedure is to receive the message.</span></dd></dl><dl paramName="Msg"><dt><span class="parameter">Msg</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/ctys3981" target="_blank">System<span id="ID0EBCACFDAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCACFDAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>UInt32</a><br /><span>The message to be posted.</span></dd></dl><dl paramName="wParam"><dt><span class="parameter">wParam</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="ID0EBCABFDAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCABFDAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IntPtr</a><br /><span>Additional message-specific information (<span class="code">unsigned int</span>).</span></dd></dl><dl paramName="lParam"><dt><span class="parameter">lParam</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="ID0EBCAAFDAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBCAAFDAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>IntPtr</a><br /><span>Additional message-specific information (<span class="code">long</span>).</span></dd></dl></div><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a><br />
            If the function succeeds, the return value is nonzero (true).
            If the function fails, the return value is zero (false).
            To get extended error information, call GetLastError.
            GetLastError returns ERROR_NOT_ENOUGH_QUOTA when the limit is hit.
            <div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Remarks</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div>
            When a message is blocked by UIPI the last error, retrieved with GetLastError, is set to 5 (access denied).
            Messages in a message queue are retrieved by calls to the GetMessage or PeekMessage function.
            Applications that need to communicate using HWND_BROADCAST should use the RegisterWindowMessage
            function to obtain a unique message for inter-application communication.
            The system only does marshalling for system messages (those in the range 0 to (WM_USER-1)).
            To send other messages (those &gt;= WM_USER) to another process, you must do custom marshalling.
            If you send a message in the range below WM_USER to the asynchronous message functions
            (PostMessage, SendNotifyMessage, and SendMessageCallback), its message parameters cannot
            include pointers. Otherwise, the operation will fail. The functions will return before the
            receiving thread has had a chance to process the message and the sender will free the memory
            before it is used.
            Do not post the WM_QUIT message using PostMessage; use the PostQuitMessage function.
            An accessibility application can use PostMessage to post WM_APPCOMMAND messages to
            the shell to launch applications. This functionality is not guaranteed to work for
            other types of applications.
            There is a limit of 10,000 posted messages per message queue. This limit should be
            sufficiently large. If your application exceeds the limit, it should be redesigned
            to avoid consuming so many system resources.
            <a name="seeAlsoSection"><!----></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div><div class="OH_CollapsibleArea_HrDiv"><hr class="OH_CollapsibleArea_Hr" /></div></div><div class="OH_clear"></div><div class="seeAlsoStyle"><a href="78d64716-958a-476f-4044-41be33ab4f74.htm" target="">User32<span id="ID0EBABAAAAAA"> </span><script type="text/javascript">
					addToLanSpecTextIdSet("ID0EBABAAAAAA?vb=.|cpp=::|cs=.|fs=.|nu=.");
				</script>NativeMethods Class</a></div><div class="seeAlsoStyle"><a href="a398e205-aca3-a4f0-e2a5-36c8e0890e8e.htm" target="">Sharparam.SharpBlade.Native.WinAPI Namespace</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"><p><a href="https://github.com/SharpBlade/SharpBlade" target="_blank">Project Page</a></p><p><a href="https://github.com/SharpBlade/SharpBlade/blob/master/LICENSE" target="_blank">Copyright (c) 2013-2014 by Adam Hellberg and Brandon Scott. (https://github.com/SharpBlade/SharpBlade/blob/master/LICENSE)</a></p><div class="OH_feedbacklink"><a href="mailto:info@sharpblade.net?subject=SharpBlade+documentation+User32.NativeMethods.PostMessage+Method++100+EN-US&amp;body=Your%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report%2c%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed%2c%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.">Send Feedback</a> on this topic to info@sharpblade.net.</div></div></body></html>